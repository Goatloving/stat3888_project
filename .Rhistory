fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.008, minsplit=4)
)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=4)
)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=5)
)
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.005, minsplit=5)
)
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=5)
)
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
age_lower = 12
age_upper = 18
bmi_threshold = 25
dat_age$BMISC
dat_age<- dat %>% filter (
dat$AGEC >=age_lower &
dat$AGEC <=age_upper &
(SMKDAILY ==5 ) | (is.na(SMKDAILY)==TRUE)
)
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=5)
)
rp_bmi<-prune(rp_bmi, cp = 0.01)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=5)
)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_waist<-rpart(PHDCMWBC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat,
#list(split="information"),
#control=rpart.control(cp=0.01, minsplit=5)
)
#rp<-prune(rp, cp = 0.0011)
rpart.plot(rp_waist,  extra =1, cex = 1, main="waist prediction tree")
fancyRpartPlot(rp_waist,palettes=c("Oranges", "Blues"), main="Waist Circumference Prediction")
age_lower = 19
age_upper = 25
bmi_threshold = 25
dat_age$BMISC
dat_age<- dat %>% filter (
dat$AGEC >=age_lower &
dat$AGEC <=age_upper &
(SMKDAILY ==5 ) | (is.na(SMKDAILY)==TRUE)
)
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat,
parms=list(split="information"),
#method=anova,
control=rpart.control(cp=0.01, minsplit=5)
)
rp_bmi<-prune(rp_bmi, cp = 0.01)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_waist<-rpart(PHDCMWBC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
#list(split="information"),
#control=rpart.control(cp=0.01, minsplit=5)
)
#rp<-prune(rp, cp = 0.0011)
rpart.plot(rp_waist,  extra =1, cex = 1, main="waist prediction tree")
fancyRpartPlot(rp_waist,palettes=c("Oranges", "Blues"), main="Waist Circumference Prediction")
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_waist<-rpart(PHDCMWBC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat,
#list(split="information"),
#control=rpart.control(cp=0.01, minsplit=5)
)
#rp<-prune(rp, cp = 0.0011)
rpart.plot(rp_waist,  extra =1, cex = 1, main="waist prediction tree")
fancyRpartPlot(rp_waist,palettes=c("Oranges", "Blues"), main="Waist Circumference Prediction")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
log <- glm(
bmi_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
familiy= binomial,
)
log <- glm(
bmi_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
log
summary(log)
log_waist <- glm(
waist_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
# create new groups for variables
biom_dat_bmi_waist<- biom_dat %>% mutate(
#bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
bmi_level = ifelse(biom_dat$BMISC < 30 , 0, 1),
#waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, "low waist", "high waist"), ifelse(biom_dat$PHDCMWBC<88, "low waist", "high waist")),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, "low waist", "high waist"), ifelse(biom_dat$PHDCMWBC<88, 0, 1)),
sys_level = ifelse(SYSTOL > 120 , "<120 mmHg", ">=120 mmHg"),
dia_level = ifelse(DIASTOL > 80 , ">80 mmHg", "<=80 mmHg"),
trig_level = ifelse((TRIGRESB==1|TRIGRESB==2|TRIGRESB==3), "<1.5 mmol/L",">=1.5 mmol/L"),
fola_level = ifelse((FOLATREB==10), ">45 nmol/L", ifelse((FOLATREB==1), "<0.8 nmol/L", "0.8-45 nmol/L")),
chol_level = ifelse((CHOLRESB==1|CHOLRESB==2|CHOLRESB==3), "<5 mmol/L",">=5 mmol/L"),
ldl_level = ifelse((LDLRESB==1|LDLRESB==2|LDLRESB==3), "<2.5 mmol/L", ">=2.5 mmol/L"),
diahr_level = ifelse(DIAHBRSK==1, "<6.0%", ">=6.0%"), # 6.0-6.4%
hba_level = ifelse((HBA1PREB==1|HBA1PREB==2|HBA1PREB==3), "<6%", ">=6%"),
glu_level = ifelse((GLUCFREB==1|GLUCFREB==2|GLUCFREB==3), "<5.5 mmol/L", ">=5.5 mmol/L"),
alt_level = ifelse((ALTRESB==1|ALTRESB==2|ALTRESB==3), "<30 U/L", ">=30 U/L")
)
# combine the datasets
dat<-cbind(biom_dat_bmi_waist, nutr_2_all_col_and_avg)
dat=dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
log_waist <- glm(
waist_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
# extract biomedical data
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, LDLRESB, DIASTOL, FOLATREB, DIAHBRSK, HBA1PREB, GLUCFREB, ALTRESB)
# extract nutrient data
nutr_2 <- tech_nutr[4:119]
# calculate average of variables and added new columns into the dataset
# Example: AVG_CAFFT2 =  (CAFFT1+CAFFT2)/2
col_name_list<-colnames(nutr_2)
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
# create new groups for variables
biom_dat_bmi_waist<- biom_dat %>% mutate(
#bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
bmi_level = ifelse(biom_dat$BMISC < 30 , 0, 1),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, "low waist", "high waist"), ifelse(biom_dat$PHDCMWBC<88, "low waist", "high waist")),
waist_level2 = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, "low waist", "high waist"), ifelse(biom_dat$PHDCMWBC<88, 0, 1)),
sys_level = ifelse(SYSTOL > 120 , "<120 mmHg", ">=120 mmHg"),
dia_level = ifelse(DIASTOL > 80 , ">80 mmHg", "<=80 mmHg"),
trig_level = ifelse((TRIGRESB==1|TRIGRESB==2|TRIGRESB==3), "<1.5 mmol/L",">=1.5 mmol/L"),
fola_level = ifelse((FOLATREB==10), ">45 nmol/L", ifelse((FOLATREB==1), "<0.8 nmol/L", "0.8-45 nmol/L")),
chol_level = ifelse((CHOLRESB==1|CHOLRESB==2|CHOLRESB==3), "<5 mmol/L",">=5 mmol/L"),
ldl_level = ifelse((LDLRESB==1|LDLRESB==2|LDLRESB==3), "<2.5 mmol/L", ">=2.5 mmol/L"),
diahr_level = ifelse(DIAHBRSK==1, "<6.0%", ">=6.0%"), # 6.0-6.4%
hba_level = ifelse((HBA1PREB==1|HBA1PREB==2|HBA1PREB==3), "<6%", ">=6%"),
glu_level = ifelse((GLUCFREB==1|GLUCFREB==2|GLUCFREB==3), "<5.5 mmol/L", ">=5.5 mmol/L"),
alt_level = ifelse((ALTRESB==1|ALTRESB==2|ALTRESB==3), "<30 U/L", ">=30 U/L")
)
# combine the datasets
dat<-cbind(biom_dat_bmi_waist, nutr_2_all_col_and_avg)
dat=dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
log_waist <- glm(
waist_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
log_waist <- glm(
waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
dat$waist_level2
# extract biomedical data
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, LDLRESB, DIASTOL, FOLATREB, DIAHBRSK, HBA1PREB, GLUCFREB, ALTRESB)
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
# extract biomedical data
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, LDLRESB, DIASTOL, FOLATREB, DIAHBRSK, HBA1PREB, GLUCFREB, ALTRESB)
# extract nutrient data
nutr_2 <- tech_nutr[4:119]
# calculate average of variables and added new columns into the dataset
# Example: AVG_CAFFT2 =  (CAFFT1+CAFFT2)/2
col_name_list<-colnames(nutr_2)
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
# create new groups for variables
biom_dat_bmi_waist<- biom_dat %>% mutate(
#bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
bmi_level = ifelse(biom_dat$BMISC < 30 , 0, 1),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, "low waist", "high waist"), ifelse(biom_dat$PHDCMWBC<88, "low waist", "high waist")),
waist_level2 = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<102, 0, 1), ifelse(biom_dat$PHDCMWBC<88, 0, 1)),
sys_level = ifelse(SYSTOL > 120 , "<120 mmHg", ">=120 mmHg"),
dia_level = ifelse(DIASTOL > 80 , ">80 mmHg", "<=80 mmHg"),
trig_level = ifelse((TRIGRESB==1|TRIGRESB==2|TRIGRESB==3), "<1.5 mmol/L",">=1.5 mmol/L"),
fola_level = ifelse((FOLATREB==10), ">45 nmol/L", ifelse((FOLATREB==1), "<0.8 nmol/L", "0.8-45 nmol/L")),
chol_level = ifelse((CHOLRESB==1|CHOLRESB==2|CHOLRESB==3), "<5 mmol/L",">=5 mmol/L"),
ldl_level = ifelse((LDLRESB==1|LDLRESB==2|LDLRESB==3), "<2.5 mmol/L", ">=2.5 mmol/L"),
diahr_level = ifelse(DIAHBRSK==1, "<6.0%", ">=6.0%"), # 6.0-6.4%
hba_level = ifelse((HBA1PREB==1|HBA1PREB==2|HBA1PREB==3), "<6%", ">=6%"),
glu_level = ifelse((GLUCFREB==1|GLUCFREB==2|GLUCFREB==3), "<5.5 mmol/L", ">=5.5 mmol/L"),
alt_level = ifelse((ALTRESB==1|ALTRESB==2|ALTRESB==3), "<30 U/L", ">=30 U/L")
)
# combine the datasets
dat<-cbind(biom_dat_bmi_waist, nutr_2_all_col_and_avg)
dat=dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
log_waist <- glm(
waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data=dat,
family= binomial,
)
summary(log_bmi)
summary(log_waist)
M1<-glm(waist_level2~., data=dat)
M1<-glm(waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
M1<-glm(waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
MO<-glm(waist_level2~1, data=dat)
M<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
MO<-glm(waist_level2~1, data=dat)
M<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
M0<-glm(waist_level2~1, data=dat)
M<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
M_waist<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
summary(M_waist)
M1<-glm(bmi_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
M0<-glm(bmi_level~1, data=dat)
M_waist<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
summary(M_waist)
M1<-glm(bmi_level~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
M0<-glm(bmi_level~1, data=dat)
M_bmi<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
summary(M_bmi)
M1<-glm(waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
M0<-glm(waist_level2~1, data=dat)
M_waist<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
summary(M_waist)
#dat$waist_level2
M1<-glm(waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB, data=dat)
M0<-glm(waist_level2~1, data=dat)
M_waist<-step(M1, scope=list(lower=M0, upper=M1),direction='backward', k=2)
summary(M_waist)
# log_waist <- glm(
#   waist_level2~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
#   data=dat,
#   family= binomial,
#
# )
#summary(log_waist)
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
control=rpart.control(cp=0.01, minsplit=5)
)
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
control=rpart.control(cp=0.01, minsplit=5)
)
age_lower = 12
age_upper = 18
bmi_threshold = 25
dat_age$BMISC
dat_age<- dat %>% filter (
dat$AGEC >=age_lower &
dat$AGEC <=age_upper &
(SMKDAILY ==5 ) | (is.na(SMKDAILY)==TRUE)
)
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
control=rpart.control(cp=0.01, minsplit=5)
)
rp_bmi<-prune(rp_bmi, cp = 0.01)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
rp_waist<-rpart(PHDCMWBC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
#list(split="information"),
#control=rpart.control(cp=0.01, minsplit=5)
)
#rp<-prune(rp, cp = 0.0011)
rpart.plot(rp_waist,  extra =1, cex = 1, main="waist prediction tree")
fancyRpartPlot(rp_waist,palettes=c("Oranges", "Blues"), main="Waist Circumference Prediction")
rp_bmi<-rpart(BMISC~SYSTOL+DIASTOL+TRIGRESB+FOLATREB+CHOLRESB+DIAHBRSK+HBA1PREB+GLUCFREB+ALTRESB,
data = dat_age,
parms=list(split="information"),
control=rpart.control(cp=0.01, minsplit=5)
)
rp_bmi<-prune(rp_bmi, cp = 0.01)
rpart.plot(rp_bmi,  extra =100, cex = 1.2, main="BMI prediction tree")
fancyRpartPlot(rp_bmi,palettes=c("Blues"), main="BMI Prediction")
library(rJava)
library(ggplot2)
library(tibble)
library(tidyverse)
library(readxl)
library(xlsx)
library(dplyr)
library(kableExtra)
# input
#filename="C:/Users/Yang/OneDrive - UNSW/~CNT Mat/test.xlsx" # Excel file name, replace '\' with '/'
filename="C:/Users/Yang/Downloads/Raw Data.xlsx"
# input
#filename="C:/Users/Yang/OneDrive - UNSW/~CNT Mat/test.xlsx" # Excel file name, replace '\' with '/'
filename="C:/Users/Yang/Downloads/Raw Data.xlsx"
cp_sheet="CP Pristine CF" # Sheet name in Excel file for CP
cp_result=read_excel(filename,sheet=cp_sheet)
cp_df=data.frame(cp_result)
cp_df
plot(cp_df[,1],cp_df[,2],xlab="Time (s)",ylab="Potential (V)",main="Charge-Discharge Curves")
flag=1 # indicator for charging and discharging, 1 = discharging
index=1 # index for current applied
# discharge first
cp_discharge<-function(flag, cp_i, cp_v){
start_v=vector(length=length(cp_i))
start_loc=vector(length=length(cp_i))
start_v[index]=cp_df[1,2]
end_loc=vector(length=length(cp_i))
end_v=vector(length=length(cp_i))
start_t=vector(length=length(cp_i))
start_t[index]=cp_df[1,1]
end_t=vector(length=length(cp_i))
i=1
while (i<nrow(cp_df)){
#print(paste("Current i is:",i))
if ((cp_df[i+1,2] < cp_df[i,2])){
if ( (flag==0) & (abs((cp_df[i,2]-cp_v[2]))<0.01) ){
flag=1 # switch to discharging state
#print("switch to discharging")
start_v[index]= cp_df[i,2] # V, start potential of discharging
start_t[index]=cp_df[i,1] # t0, start time of discharging
end_loc[index]=i
}
}
if ((cp_df[i+1,2]>cp_df[i,2])){
if ( (flag==1) & (abs((cp_df[i,2]-cp_v[1]))<0.01) ) {
flag=0
#print("switch to charging")
end_v[index]=cp_df[i,2] # V, end potential of discharging
end_t[index]=cp_df[i,1] # t1, end time of discharging
start_loc[index]=i
index<-index+1
}
}  # v_(t+1)>v_(t), switch to charging state
i=i+1
}
result=data.frame(cp_i,start_loc, end_loc,start_v,end_v,abs(end_v-start_v), start_t,end_t, abs(end_t-start_t), (abs(end_t-start_t))*cp_i/abs(end_v-start_v),(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/weight/1000,(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/size,(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/volume/1000)
return(result)
}
result=cp_discharge(1,cp_i,cp_v)
cp_i=c(80,60,40,20,10) # Absolute value of CP current in mA
cp_v=c(0,0.8) # Potential window of CP in V
flag=1 # indicator for charging and discharging, 1 = discharging
index=1 # index for current applied
# discharge first
cp_discharge<-function(flag, cp_i, cp_v){
start_v=vector(length=length(cp_i))
start_loc=vector(length=length(cp_i))
start_v[index]=cp_df[1,2]
end_loc=vector(length=length(cp_i))
end_v=vector(length=length(cp_i))
start_t=vector(length=length(cp_i))
start_t[index]=cp_df[1,1]
end_t=vector(length=length(cp_i))
i=1
while (i<nrow(cp_df)){
#print(paste("Current i is:",i))
if ((cp_df[i+1,2] < cp_df[i,2])){
if ( (flag==0) & (abs((cp_df[i,2]-cp_v[2]))<0.01) ){
flag=1 # switch to discharging state
#print("switch to discharging")
start_v[index]= cp_df[i,2] # V, start potential of discharging
start_t[index]=cp_df[i,1] # t0, start time of discharging
end_loc[index]=i
}
}
if ((cp_df[i+1,2]>cp_df[i,2])){
if ( (flag==1) & (abs((cp_df[i,2]-cp_v[1]))<0.01) ) {
flag=0
#print("switch to charging")
end_v[index]=cp_df[i,2] # V, end potential of discharging
end_t[index]=cp_df[i,1] # t1, end time of discharging
start_loc[index]=i
index<-index+1
}
}  # v_(t+1)>v_(t), switch to charging state
i=i+1
}
result=data.frame(cp_i,start_loc, end_loc,start_v,end_v,abs(end_v-start_v), start_t,end_t, abs(end_t-start_t), (abs(end_t-start_t))*cp_i/abs(end_v-start_v),(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/weight/1000,(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/size,(abs(end_t-start_t))*cp_i/abs(end_v-start_v)/volume/1000)
return(result)
}
result=cp_discharge(1,cp_i,cp_v)
result=cp_discharge(0,cp_i,cp_v)
result=cp_discharge(1,cp_i,cp_v)
# chunk setup
knitr::opts_chunk$set(echo = TRUE)
# renv setup options for libraries snapshot/quickly install all packages needed:
#renv::snapshot()
#renv::restore()
library(tidyverse)
library(here)      # directory referencing
library(readxl)    # reading Excel files
library(janitor)   # data cleaning
library(stringr)   # string manipulation
library(tidyr)     # new tidy functions
library(knitr) # kable
library(modi) # ok for multivariate outlier detection
library(caret)# low variance filter
# missing values
library(naniar)
library(knitr)
library(ggpubr) # ggplot arrangement
#ploting
library(gridExtra)
library(kableExtra)
#outlier
library(univOutl)
# tree methods
library(tourr)
library(RColorBrewer)
library(plotly)
library(htmltools)
library(caret)
library(rpart)
library(rpart.plot)
load("tech_data.Rdata") # load cleaned data from John's code, make sure you have the Rdata file within the working directory
load("tech_data.Rdata") # load cleaned data from John's code, make sure you have the Rdata file within the working directory
dat<-cbind(tech_biom, tech_nutr)
dat_pca <- prcomp(dat, centre=TRUE, scale = TRUE)
dat_pca <- Rtsne(dat, centre=TRUE, scale = TRUE)
install.packages('Rtsne')
library(Rtsne)
dat_pca <- Rtsne(dat, centre=TRUE, scale = TRUE)
dat
dat[1:55]
dat[1:54]
tech_nutr
tech_nutr[3:191]
dat<-cbind (tech_biom[1:54],tech_nutr[3:191])
dat
dat_pca <- Rtsne(dat, centre=TRUE, scale = TRUE)
dat<-na.omit(dat)
dat
dat_pca <- Rtsne(dat, centre=TRUE, scale = TRUE)
dat_pca
d_tsne_1 <- Rtsne(dat, centre=TRUE, scale = TRUE)
## plotting the results without clustering
ggplot(d_tsne_1, aes(x=V1, y=V2)) +
geom_point(size=0.25) +
xlab("") + ylab("") +
ggtitle("t-SNE") +
theme_light(base_size=20) +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank()) +
scale_colour_brewer(palette = "Set2")
d_tsne_1_res = as.data.frame(d_tsne_1$Y)
## plotting the results without clustering
ggplot(d_tsne_1_res, aes(x=V1, y=V2)) +
geom_point(size=0.25) +
xlab("") + ylab("") +
ggtitle("t-SNE") +
theme_light(base_size=20) +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank()) +
scale_colour_brewer(palette = "Set2")
dat
