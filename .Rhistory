ggplot() +
aes(y = CHOLRESB, x = CAFFT_AVG) +
geom_boxplot(shape = "circle", fill = "#112446") +
theme_minimal()
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04)
nutr <- tech_nutr[3:10]
nutr <- tech_nutr[3:10]
nutr
nutr <- tech_nutr[4:10]
nutr
nutr <- tech_nutr[4:70]
nutr
nutr <- tech_nutr[4:120]
nutr
nutr <- tech_nutr[4:119]
nutr
nutr <- tech_nutr[4:119]
nutr[1]
n<-nutr_2
nutr_2 <- tech_nutr[4:119]
n<-nutr_2
colnames(n[2], "sd")
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2
mutate(n, new_col = (n[1]+n[2])/2)
names(n)[names(n)=='new_col']<-"new name"
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2
mutate(n, new_col = (n[1]+n[2])/2)
names(n)[names(n)=='new_col']<-"new name"
n
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
mutate(n, new_col = (n[1]+n[2])/2)
names(n)[names(n)=='new_col']<-"new name"
n
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
mutate(n, new_col = (n[1]+n[2])/2)
names(n)[names(n)=='new_col']<-"new name"
n
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
n<-mutate(n, new_col = (n[1]+n[2])/2)
n<-names(n)[names(n)=='new_col']<-"new name"
n
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
n<-mutate(n, new_col = (n[1]+n[2])/2)
names(n)[names(n)=='new_col']<-"new name"
n
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
n<-mutate(n, new_col = (n[:,1]+n[:,2])/2)
nutr_2 <- tech_nutr[4:119]
# for ( i in 1: ncol(nutr_2)){
#   if (i %% 2 == 0){
#     mutate(nutr_2, )
#   }
# }
n<-nutr_2[1:10]
n<-mutate(n, new_col = (n[,1]+n[,2])/2)
names(n)[names(n)=='new_col']<-"new name"
n
col_name_list<-colnames(nutr_2)
col_name_list
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2
nutr_2$AVG_EIBMR2
(nutr_2$EIBMR1[1]+nutr_2$EIBMR2[1])/2
nutr_2$AVG_EIBMR2[1]
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_avg
nutr_2_total_avg<- cbind (tech_nutr[1:3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)]
nutr_2_total_avg
nutr_2_total_avg<- cbind (tech_nutr[1:3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
nutr_2_total_avg
nutr_2 <- tech_nutr[4:119]
col_name_list<-colnames(nutr_2)
col_name_list
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[1:3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
nutr_2_all_col_and_avg
dat<-cbind(biom_dat, nutr_2_all_col_and_avg)
dat
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX)
dat %>% mutate(
bmi_level = ifelse(BMISC < 25 , 1, ifelse(BMISC >29, 3, 2))
)
nutr_2 <- tech_nutr[4:119]
col_name_list<-colnames(nutr_2)
col_name_list
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[1:3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
nutr_2_all_col_and_avg
dat<-cbind(biom_dat, nutr_2_all_col_and_avg)
dat %>% mutate(
bmi_level = ifelse(dat$BMISC < 25 , 1, ifelse(dat$BMISC >29, 3, 2))
)
biom_dat <- tech_biom %>% select (ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX)
biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2))
)
nutr_2_all_col_and_avg
biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2))
)
dat<-cbind(biom_dat_bmi, nutr_2_all_col_and_avg)
biom_dat_bmi<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2))
)
dat<-cbind(biom_dat_bmi, nutr_2_all_col_and_avg)
dat
nutr_2 <- tech_nutr[4:119]
col_name_list<-colnames(nutr_2)
col_name_list
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
nutr_2_all_col_and_avg
biom_dat_bmi<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2))
)
dat<-cbind(biom_dat_bmi, nutr_2_all_col_and_avg)
dat
biom_dat_bmi<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2))
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<94, 1, 2), ifelse(biom_dat$PHDCMWBC<80, 1, 2))
biom_dat_bmi<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<94, 1, 2), ifelse(biom_dat$PHDCMWBC<80, 1, 2))
)
dat<-cbind(biom_dat_bmi, nutr_2_all_col_and_avg)
biom_dat_bmi_waist<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<94, 1, 2), ifelse(biom_dat$PHDCMWBC<80, 1, 2))
)
dat<-cbind(biom_dat_bmi_waist, nutr_2_all_col_and_avg)
dat # average colums ends at 76
interest<-c("SEX","BMISC", "bmi_level", "PHDCMWBC", "waist_level")
dat[interest] # average colums ends at 76
x[which (x$SEX==2),"waist_level","PHDCMWBC"]
x<-dat[interest] # average colums ends at 76
x[which (x$SEX==2),"waist_level","PHDCMWBC"]
x[which (x$SEX==2),c("waist_level","PHDCMWBC")]
x[which (x$SEX==1),c("waist_level","PHDCMWBC")]
dat
nutr_2 <- tech_nutr[4:119]
col_name_list<-colnames(nutr_2)
col_name_list
for ( i in 1: ncol(nutr_2)){
if (i %% 2 == 0){
nutr_2<- mutate(nutr_2,  new_col = (nutr_2[,i-1] + nutr_2[,i])/2)
new_names = paste0("AVG_", col_name_list[i])
names(nutr_2)[names(nutr_2)=='new_col']<-new_names
}
}
nutr_2_avg <- nutr_2 %>% select (contains("AVG"))
nutr_2_all_col_and_avg<- cbind (tech_nutr[3], nutr_2_avg, tech_nutr[120:ncol(tech_nutr)])
nutr_2_all_col_and_avg
# code obesity, higher value -> fatter
biom_dat_bmi_waist<- biom_dat %>% mutate(
bmi_level = ifelse(biom_dat$BMISC < 25 , 1, ifelse(biom_dat$BMISC >29, 3, 2)),
waist_level = ifelse(biom_dat$SEX==1, ifelse(biom_dat$PHDCMWBC<94, 1, 2), ifelse(biom_dat$PHDCMWBC<80, 1, 2))
)
dat<-cbind(biom_dat_bmi_waist, nutr_2_all_col_and_avg)
dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0)
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
esquisse:::esquisser()
interest<-c("bmi_level", "waist_level", "add_sugar_more", "tranper_more")
dat_select <- dat[interest]
interest<-c("bmi_level", "waist_level", "add_sugar_more", "tranper_more")
dat_select <- dat[,interest]
dat_select <- dat["bmi_level"]
dat_select
dat_select <- dat["bmi_level", "waist_level", "add_sugar_more", "tranper_more"]
dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
dat_select <- dat["bmi_level", "waist_level", "add_sugar_more", "tranper_more"]
dat_select <- dat[tranper_more]
dat_select <- dat['tranper_more']
dat<-dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
select<-dat["bmi_level","waist_level","add_sugar_more","tranper_more"]
dat=dat %>% mutate(
add_sugar_more = ifelse(dat$ADDSUG1N>24, 1, 0),
tranper_more = ifelse(dat$AVG_TRANPER2>1, 1, 0)
)
dat
select<-dat["bmi_level","waist_level","add_sugar_more","tranper_more"]
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more")]
esquisse:::esquisser()
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more","ADDSUG1N","TRANPER")]
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more","ADDSUG1N","AVG_TRANPER")]
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more","ADDSUG1N","AVG_TRANPER2")]
esquisse:::esquisser()
tech_nutr[,which(tech_nutr$ADDSUG1N>99)]
tech_nutr[which(tech_nutr$ADDSUG1N>99)]
tech_nutr[which(tech_nutr$ADDSUG1N>99),]
tech_nutr %>% select (ADDSUG1N)%>%[which(tech_nutr$ADDSUG1N>99),]
tech_nutr %>% select (ADDSUG1N)
x<-tech_nutr %>% select (ADDSUG1N)
xx<-x%>%[which(tech_nutr$ADDSUG1N>99),]
xx<-x%>%[which(x$ADDSUG1N>99),]
x<-tech_nutr %>% select (ADDSUG1N)
x
x[which(x$ADDSUG1N>99),]
length(x[which(x$ADDSUG1N>99),])
esquisse:::esquisser()
select_add_sugar_more<-select[which(add_suger_more == 1)]
select_add_sugar_more<-select[which(selec$add_suger_more == 1)]
select_add_sugar_more<-select[which(selec$add_suger_more == 1),]
select [which (select$add_sugar_more == 1),]
select_add_sugar_less <-select [which (select$add_sugar_more == 0),]
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more","ADDSUG1N","AVG_TRANPER2")]
select_add_sugar_more <-select [which (select$add_sugar_more == 1),]
select_add_sugar_less <-select [which (select$add_sugar_more == 0),]
select_tranper_more <-select [which (select$tranper_more == 1),]
select_tranper_less <-select [which (select$tranper_more == 1),]
esquisse:::esquisser()
ggplot(select_add_sugar_less) +
aes(x = ADDSUG1N, y = bmi_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_add_sugar_less) +
aes(x = ADDSUG1N, y = waist_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_add_sugar_more) +
aes(x = AVG_TRANPER2, y = bmi_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_add_sugar_more) +
aes(x = AVG_TRANPER2, y = waist_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_tranper_less) +
aes(x = AVG_TRANPER2, y = bmi_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_tranper_less) +
aes(x = AVG_TRANPER2, y = waist_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_tranper_more) +
aes(x = AVG_TRANPER2, y = bmi_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
ggplot(select_tranper_more) +
aes(x = AVG_TRANPER2, y = waist_level) +
geom_point(shape = "circle", size = 1.5, colour = "#112446") +
theme_minimal()
esquisse:::esquisser()
ggplot(select) +
aes(x = bmi_level) +
geom_histogram(bins = 30L, fill = "#112446") +
theme_minimal()
ggplot(select) +
aes(x = waist_level) +
geom_histogram(bins = 30L, fill = "#112446") +
theme_minimal()
as.factor(select['bmi_level'])
as.factor(select['bmi_level'], levels=1:3)
as.factor(select['bmi_level'], levels=c(1,2,3,NA))
as.factor(select['bmi_level'])
levels(select['bmi_level'])[2]<-2
levels(select['bmi_level'])[3]<-3
levels(select['bmi_level'])[2]<-2
as.factor(select['bmi_level'])
knitr::opts_chunk$set(echo = TRUE)
#renv::snapshot()
#renv::restore()
select<-dat[c("bmi_level","waist_level","add_sugar_more","tranper_more","ADDSUG1N","AVG_TRANPER2")]
library(tourr)
install.packages(tourr)
install.packages('tourr')
library(RColorBrewer)
library(plotly)
library(tourr)
install.packages('plotly')
install.packages('htmltools')
library(htmltools)
library(htmltools)
library(plotly)
library(rpart.plot)
install.packages('rpart')
install.packages('rpart.plot')
library(tourr)
library(RColorBrewer)
library(plotly)
library(htmltools)
library(caret)
library(rpart)
library(rpart.plot)
tr_indx <- createDataPartition(select$BMISC)
tr_indx <- createDataPartition(dat$BMISC)
tr_indx <- createDataPartition(dat$BMISC)
tr_indx <- createDataPartition(dat$BMISC)$Resanoke1
tr_indx <- createDataPartition(dat$BMISC)$Resample1
complete<-na.omit(dat)
tr_indx <- createDataPartition(complete$BMISC)$Resample1
tr_indx
complete
complete_tr<-complete[tr_index,2:154]
complete_tr<-complete[tr_indx,2:154]
rpart(complete$AVG_CAFFT2~.,
data = complete,
params=list(split="information"),
control=rpart.control(cp=0.0001, minsplit=5)
)
rpart(AVG_CAFFT2~.,
data = complete,
params=list(split="information"),
control=rpart.control(cp=0.0001, minsplit=5)
)
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr
params=list(split="information"),
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
params=list(split="information"),
control=rpart.control(cp=0.0001, minsplit=5)
)
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
rp
rpart.plot(rp, type =4, extra =1)
complete<-dat%>%select(ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, AVG_CAFFT2)
complete<-na.omit(complete)
tr_indx <- createDataPartition(complete$BMISC)$Resample1
complete_tr<-complete[tr_indx,ncol(complete)]
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
complete_tr<-complete[tr_indx,ncol(complete)]
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
complete<-dat%>%select(ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, AVG_CAFFT2)
complete
complete<-na.omit(complete)
complete
tr_indx <- createDataPartition(complete$BMISC)$Resample1
complete_tr<-complete[tr_indx,ncol(complete)]
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
complete<-as.data.frame(complete)
tr_indx <- createDataPartition(complete$BMISC)$Resample1
complete_tr<-complete[tr_indx,ncol(complete)]
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
complete_tr
complete_tr<-complete[tr_indx,2:ncol(complete)]
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
control=rpart.control(cp=0.0001, minsplit=5)
)
rpart.plot(rp, type =4, extra =1)
rp<-prune(rp, cp = 0.01)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp, type =4, extra =1)
rp<-prune(rp, cp = 0.001)
rpart.plot(rp, type =4, extra =1)
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.0001, minsplit=5)
)
rp<-prune(rp, cp = 0.001)
rpart.plot(rp, type =4, extra =1)
rpart.plot(rp, type =4, extra =1, cex = 1)
rpart.plot(rp,  extra =1, cex = 1)
rpart.plot(rp,  extra =1, cex = 0.1)
rpart.plot(rp,  extra =1, cex = 0.5)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 0.5)
rpart.plot(rp,  extra =1, cex = 1)
rp<-prune(rp, cp = 0.005)
rpart.plot(rp,  extra =1, cex = 1)
rp<-prune(rp, cp = 0.001)
rpart.plot(rp,  extra =1, cex = 1)
rp<-prune(rp, cp = 0.0001)
rpart.plot(rp,  extra =1, cex = 1)
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rp<-prune(rp, cp = 0.0001)
rpart.plot(rp,  extra =1, cex = 1)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 1)
rp<-rpart(AVG_CAFFT2~.,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rpart.plot(rp,  extra =1, cex = 1)
rp<-rpart(BMISC~.,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rpart.plot(rp,  extra =1, cex = 1)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 1)
rp<-rpart(BMISC~AVG_CAFFT2,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 1)
rp<-rpart(BMISC~AVG_CAFFT2+AGEC+ DIABBC+ HYPBC+ SMKDAILY+ HCHOLBC+ CVDMEDST+ HSUGBC+ BIORESPC+ SYSTOL+ BMISC+ TRIGRESB+ CHOLRESB+ BDYMSQ04+SEX,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 1)
rpart.plot(rp,  extra =1, cex = 1, main="BMI prediction tree")
rpart.plot(rp,  extra =1, cex = 1, main="BMISC prediction tree")
complete<-dat%>%select(ABSPID, AGEC, DIABBC, HYPBC, SMKDAILY, HCHOLBC, CVDMEDST, HSUGBC, BIORESPC, SYSTOL, BMISC, TRIGRESB, PHDCMWBC, CHOLRESB, BDYMSQ04, SEX, AVG_CAFFT2)
complete<-na.omit(complete)
complete<-as.data.frame(complete)
tr_indx <- createDataPartition(complete$BMISC)$Resample1
complete_tr<-complete[tr_indx,2:ncol(complete)]
rp<-rpart(BMISC~AVG_CAFFT2+AGEC+ DIABBC+ HYPBC+ SMKDAILY+ HCHOLBC+ CVDMEDST+ HSUGBC+ BIORESPC+ SYSTOL+ BMISC+ TRIGRESB+ CHOLRESB+ BDYMSQ04+SEX,
data = complete_tr,
parms=list(split="information"),
control=rpart.control(cp=0.001, minsplit=5)
)
rp<-prune(rp, cp = 0.01)
rpart.plot(rp,  extra =1, cex = 1, main="BMISC prediction tree")
